@page "/admin-page"
@layout EmptyLayout
@using MyVegieStore.ViewModel
@using MyVegieStore.Model
@inject OrderViewModel OrderViewModel
@using MyVegieStore.Services
@inject UserIdService UserIdService
@inject NavigationManager NavigationManager

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

<div class="user-type-message">
    <p>סוג משתמש: @UserIdService.UserType</p>
</div>

@if (UserIdService.UserType != "Admin")
{
    <div class="non-admin-message">
        אהלן אהלן <br />
        אתה לא במקום הנכון - מעביר אותך לדף הבית...
    </div>

    @* Trigger the redirect after the page has rendered *@
    <@RedirectNonAdmin />
}
else
{
    <div class="admin-container">
        <h2>דף מנהלים</h2>
        <div class="card-container">
            <div class="card" @onclick="NavigateToProducts">
                <div class="card-icon">
                    <i class="fas fa-box"></i> <!-- Font Awesome Icon for products -->
                </div>
                <div class="card-title">צפיה בדף מוצרים</div>
            </div>
            <div class="card" @onclick="NavigateToAddProduct">
                <div class="card-icon">
                    <i class="fas fa-plus"></i> <!-- Font Awesome Icon for adding a product -->
                </div>
                <div class="card-title">הוספת מוצר</div>
            </div>
            <div class="card" @onclick="NavigateToHome">
                <div class="card-icon">
                    <i class="fas fa-home"></i> <!-- Font Awesome Icon for home -->
                </div>
                <div class="card-title">חזרה לדף הבית</div>
            </div>
        </div>
    </div>
}

@code {
    private void NavigateToProducts()
    {
        NavigationManager.NavigateTo("/products");
    }

    private void NavigateToAddProduct()
    {
        NavigationManager.NavigateTo("/add-product");
    }

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private class RedirectNonAdmin : ComponentBase
    {
        [Inject] NavigationManager NavigationManager { get; set; }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await Task.Delay(3000); // Wait for 3 seconds
                NavigationManager.NavigateTo("/");
            }
        }
    }
}

<style>
    .admin-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        background-color: #f5f5f5;
        height: 100vh;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .admin-container h2 {
            color: #333;
            font-size: 28px;
            margin-bottom: 20px;
        }

    .card-container {
        display: flex;
        gap: 20px;
    }

    .card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 200px;
        padding: 20px; 
        text-align: center;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .card-icon {
        font-size: 50px;
        color: #4CAF50; /* Green color for the icons */
        margin-bottom: 10px;
    }

    .card-title {
        font-size: 18px;
        color: #333;
        font-weight: bold;
    }

    .non-admin-message {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        font-size: 24px;
        color: #FF5722;
    }

    body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
    }
</style>
